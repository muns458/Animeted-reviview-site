<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Stats Dashboard</title>
  <style>
    body {
      margin: 0;
      padding: 20px;
      font-family: 'Segoe UI', Arial, sans-serif;
      background: #f5f7fa;
    }

    .stats-container {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      max-width: 1200px;
      margin: auto;
    }

    .stat-box {
      background: #fff;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0,0,0,0.1);
      padding: 30px;
      width: 180px;
      text-align: center;
      transition: transform 0.3s ease;
    }

    .stat-box:hover {
      transform: scale(1.05);
    }

    .stat-icon {
      font-size: 36px;
      margin-bottom: 10px;
      opacity: 0;
      animation: fadeIn 0.5s ease forwards;
    }

    .stat-number {
      font-size: 32px;
      font-weight: bold;
      color: #333;
    }

    .stat-label {
      font-size: 14px;
      color: #777;
      margin-top: 5px;
    }

    /* Distinct colors for each stat-box */
    .stat-box:nth-child(1) .stat-icon { color: #007BFF; }
    .stat-box:nth-child(2) .stat-icon { color: #28A745; }
    .stat-box:nth-child(3) .stat-icon { color: #DC3545; }
    .stat-box:nth-child(4) .stat-icon { color: #FFC107; }
    .stat-box:nth-child(5) .stat-icon { color: #17A2B8; }

    /* Fade-in animation for icons */
    @keyframes fadeIn {
      to { opacity: 1; }
    }

    /* Responsive breakpoints */
    @media screen and (max-width: 768px) {
      .stat-box {
        width: 45%;
      }
    }

    @media screen and (max-width: 480px) {
      .stat-box {
        width: 100%;
      }
    }
  </style>
  <script defer src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>
<body>
  <div class="stats-container">
    <div class="stat-box" role="region" aria-label="Awards statistic">
      <div class="stat-icon" style="animation-delay: 0.1s;"><i class="fas fa-trophy" aria-hidden="true"></i></div>
      <div class="stat-number" data-target="20" aria-live="polite">0+</div>
      <div class="stat-label">Awards</div>
    </div>

    <div class="stat-box" role="region" aria-label="Years of Experience statistic">
      <div class="stat-icon" style="animation-delay: 0.2s;"><i class="fas fa-clock" aria-hidden="true"></i></div>
      <div class="stat-number" data-target="5" aria-live="polite">0+</div>
      <div class="stat-label">Years of Experience</div>
    </div>

    <div class="stat-box" role="region" aria-label="Projects Completed statistic">
      <div class="stat-icon" style="animation-delay: 0.3s;"><i class="fas fa-folder-open" aria-hidden="true"></i></div>
      <div class="stat-number" data-target="400" aria-live="polite">0+</div>
      <div class="stat-label">Projects Completed</div>
    </div>

    <div class="stat-box" role="region" aria-label="5-Star Reviews statistic">
      <div class="stat-icon" style="animation-delay: 0.4s;"><i class="fas fa-star" aria-hidden="true"></i></div>
      <div class="stat-number" data-target="400" aria-live="polite">0+</div>
      <div class="stat-label">5-Star Reviews</div>
    </div>

    <div class="stat-box" role="region" aria-label="Happy Clients statistic">
      <div class="stat-icon" style="animation-delay: 0.5s;"><i class="fas fa-smile" aria-hidden="true"></i></div>
      <div class="stat-number" data-target="300" aria-live="polite">0+</div>
      <div class="stat-label">Happy Clients</div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const counters = document.querySelectorAll('.stat-number');
      const speed = 40;

      counters.forEach(counter => {
        const target = +counter.getAttribute('data-target');
        if (isNaN(target)) return; // Skip if target is invalid

        const updateCount = () => {
          const count = +counter.innerText.replace('+', '');
          const inc = Math.ceil(target / speed);

          if (count < target) {
            counter.innerText = `${count + inc}+`;
            requestAnimationFrame(updateCount);
          } else {
            counter.innerText = `${target}+`;
          }
        };

        updateCount();
      });
    });
  </script>
</body>
</html>